// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  refreshToken RefreshToken?
  Post         Post[]
  Comment Comment[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique
  token     String   @unique
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Post {
  id            String   @id @default(uuid())
  title         String
  content       String
  imageUrl      String
  imagePublicId String
  publishedAt   DateTime @default(now())
  authorId      Int
  author        User     @relation(fields: [authorId], references: [id])
  Comment Comment[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  postId    String
  authorId  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  author    User     @relation(fields: [authorId], references: [id])
}